@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":GlossaryParser" as GlossaryParser LOGIC_COLOR
participant ":RandomQuizCommandParser" as RandomQuizCommandParser LOGIC_COLOR
participant "rq:RandomQuizCommand" as RandomQuizCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
participant ":Glossary" as Glossary LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("random 5")
activate LogicManager

LogicManager -> GlossaryParser : parseCommand("random 5")
activate GlossaryParser

create RandomQuizCommandParser
GlossaryParser -> RandomQuizCommandParser
activate RandomQuizCommandParser

RandomQuizCommandParser --> GlossaryParser
deactivate RandomQuizCommandParser

GlossaryParser -> RandomQuizCommandParser : parse("5")
activate RandomQuizCommandParser

create RandomQuizCommand
RandomQuizCommandParser -> RandomQuizCommand
activate RandomQuizCommand

RandomQuizCommand --> RandomQuizCommandParser : rq
deactivate RandomQuizCommand

RandomQuizCommandParser --> GlossaryParser : rq
deactivate RandomQuizCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
RandomQuizCommandParser -[hidden]-> GlossaryParser
destroy RandomQuizCommandParser

GlossaryParser --> LogicManager : rq
deactivate GlossaryParser

LogicManager -> RandomQuizCommand : execute()
activate RandomQuizCommand

RandomQuizCommand -> Model : setRandomQuizMode(true)
activate Model

Model --> RandomQuizCommand
deactivate Model

create Glossary
RandomQuizCommand -> Glossary
activate Glossary

Glossary --> RandomQuizCommand
deactivate Glossary

RandomQuizCommand -> Model : replaceGlossary()
activate Model

Model --> RandomQuizCommand
deactivate Model

RandomQuizCommand -> Model : setQuizMode(true)
activate Model

Model --> RandomQuizCommand
deactivate Model

RandomQuizCommand -> Model : updateFilteredPhraseList()
activate Model

Model --> RandomQuizCommand
deactivate Model

create CommandResult
RandomQuizCommand -> CommandResult
activate CommandResult

CommandResult --> RandomQuizCommand
deactivate CommandResult

RandomQuizCommand --> LogicManager : result
deactivate RandomQuizCommand

[<--LogicManager
deactivate LogicManager
@enduml
